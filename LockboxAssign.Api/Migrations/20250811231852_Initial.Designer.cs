// <auto-generated />
using System;
using LockboxAssign.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LockboxAssign.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250811231852_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LockboxAssign.Api.Models.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LockboxId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId")
                        .IsUnique()
                        .HasFilter("\"EquipmentId\" IS NOT NULL");

                    b.HasIndex("LockboxId")
                        .IsUnique();

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("LockboxAssign.Api.Models.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ParkingSpot")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("UnitNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UnitNumber")
                        .IsUnique();

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("LockboxAssign.Api.Models.Lockbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("Lockboxes");
                });

            modelBuilder.Entity("LockboxAssign.Api.Models.Assignment", b =>
                {
                    b.HasOne("LockboxAssign.Api.Models.Equipment", "Equipment")
                        .WithOne("Assignment")
                        .HasForeignKey("LockboxAssign.Api.Models.Assignment", "EquipmentId");

                    b.HasOne("LockboxAssign.Api.Models.Lockbox", "Lockbox")
                        .WithOne("Assignment")
                        .HasForeignKey("LockboxAssign.Api.Models.Assignment", "LockboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Lockbox");
                });

            modelBuilder.Entity("LockboxAssign.Api.Models.Equipment", b =>
                {
                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("LockboxAssign.Api.Models.Lockbox", b =>
                {
                    b.Navigation("Assignment");
                });
#pragma warning restore 612, 618
        }
    }
}
